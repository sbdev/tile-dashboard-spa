{"version":3,"sources":["components/stats-tile.module.scss","components/stats-summary.module.scss","components/stats-tile.tsx","stores/dashboard-store.tsx","components/stats-summary.tsx","components/nav-header.tsx","routes/stats.tsx","app.tsx","index.tsx","components/nav-header.module.scss"],"names":["module","exports","StatsTile","title","value","unit","loading","color","className","cx","styles","container","initialState","cache","data","filter","stat","values","aggregations","isLoading","defaultContext","client","DashboardContext","React","createContext","DashboardDataService","dispatcher","_dispatcher","this","method","fetch","then","result","json","setTimeout","dashboardReducer","state","action","nextValues","Array","prototype","push","apply","count","length","mean","round","median","std","mode","Object","assign","DashboardStore","children","route","useReducer","dispatch","dataService","useMemo","useEffect","load","params","consumerApi","Provider","DISPLAY_STATS","id","label","StatsSummary","useContext","tiles","map","idx","key","DATASETS","NavHeader","inputEl","useRef","datasetLinks","selected","to","navButton","navBar","dataEntry","disabled","ref","type","addButton","onClick","current","nextValue","parseFloat","NaN","Number","isNaN","append","Stats","match","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69160c0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stats-tile_container__1d8DT\",\"color-0\":\"stats-tile_color-0__3q7SG\",\"color-1\":\"stats-tile_color-1__1tA6B\",\"color-2\":\"stats-tile_color-2__ec2BI\",\"color-3\":\"stats-tile_color-3__1SUyV\",\"color-4\":\"stats-tile_color-4__7rXqO\",\"color-5\":\"stats-tile_color-5__3n0Ga\",\"color-6\":\"stats-tile_color-6__3XNv8\",\"color-7\":\"stats-tile_color-7__1S-fv\",\"color-8\":\"stats-tile_color-8__33KEM\",\"color-9\":\"stats-tile_color-9__3bykk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stats-summary_container__pErPy\"};","import React, { FunctionComponent } from 'react';\nimport cx from 'classnames';\n\nimport styles from './stats-tile.module.scss';\n\ntype StatsTileProps = {\n    value?: number,\n    title: string,\n    unit?: string,\n    color?: number,\n    loading?: boolean\n}\n\nconst StatsTile: FunctionComponent<StatsTileProps> = ({ title, value=null, unit='', loading=false, color=0 }) => {\n\n    return <div className={cx(styles.container, styles[`color-${color}`])}>\n        <h1>{title}</h1>\n        <h2>{value ?? '-'}</h2>\n        <h3>{unit}</h3>\n    </div>;\n\n}\n\nexport default StatsTile;\n","import React, { FunctionComponent, useEffect, useMemo, useReducer, ReactNode } from 'react';\nimport { std, mean, median, mode, round } from 'mathjs';\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nconst JSON_BASE_URL = '/tile-dashboard-spa/json/';\nconst FEEDBACK_DELAY = 0.3 * 1000;\nconst DEFAULT_STAT = '1234';\nconst STAT_PRECISION = 1;\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\ntype StatPayload = {\n    data: number[]\n}\n\ntype DashboardStoreProps = {\n    route: {\n        params: {\n            stat?: string\n        }\n    },\n    children: ReactNode\n}\n\ntype ReducerState = {\n    cache: {[key: string]: number[]},\n    data: DashboardResults,\n    isLoading: boolean\n};\n\ntype DashboardResults = {\n    filter: DashboardFilter,\n    values: number[],\n    aggregations: {[key: string]: number},\n};\n\ntype ConsumerApi = {\n    data: DashboardResults,\n    client: DashboardDataService | null\n    isLoading: boolean\n};\n\ntype DashboardFilter = {\n    stat: string\n};\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nconst initialState: ReducerState = {\n    cache: {},\n    data: {\n        filter: {\n            stat: DEFAULT_STAT\n        },\n        values: [],\n        aggregations: {}\n    },\n    isLoading: true\n};\n\nconst defaultContext: ConsumerApi = {\n    data: initialState.data,\n    client: null,\n    isLoading: initialState.isLoading\n}\n\nconst DashboardContext = React.createContext(defaultContext);\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nconst aggregateDataset = (values: number[]) => {\n\n    return {\n        count: values.length,\n        mean: round(mean(values), STAT_PRECISION),\n        median: round(median(values), STAT_PRECISION),\n        std: round(std(values), STAT_PRECISION),\n        mode: round(mode(values), STAT_PRECISION)\n    };\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass DashboardDataService {\n\n    private _dispatcher: Function;\n\n    constructor(dispatcher: Function) {\n        this._dispatcher = dispatcher;\n    }\n\n    load (filter: DashboardFilter) {\n        this._dispatcher({\n            method: 'setLoading',\n            filter,\n        });\n        fetch(`${JSON_BASE_URL}/data-${filter.stat}.json`).then(\n            result => result.json()\n        ).then((json: StatPayload) => {\n            this._dispatcher({\n                method: 'setValues',\n                values: json.data,\n                filter\n            });\n        });\n        // TODO: error handling\n    }\n\n    append (value: number, filter: DashboardFilter) {\n        this._dispatcher({\n            method: 'setLoading',\n            filter\n        });\n        // short delay to flash ui to give user feedback\n        setTimeout(() => {\n            this._dispatcher({\n                method: 'appendValues',\n                values: [value],\n                filter\n            });\n        }, FEEDBACK_DELAY);\n    }\n\n}\n\nconst dashboardReducer = (state: ReducerState, action: {method: string, filter: DashboardFilter, values: number[]}): ReducerState => {\n\n    if (action.method === 'setLoading') {\n        // Empty the tiles to give action feedback\n        return {\n            data: {\n                filter: action.filter,\n                values: [],\n                aggregations: {}\n            },\n            isLoading: true,\n            cache: state.cache\n        };\n    }\n\n    let nextValues: number[];\n    if (action.method === 'appendValues') {\n        nextValues = state.cache[action.filter.stat] ? [...state.cache[action.filter.stat]] : [];\n    } else {\n        nextValues = [];\n    }\n\n    // append or set new values\n    Array.prototype.push.apply(nextValues, action.values);\n\n    const results = {\n        filter: action.filter,\n        values: nextValues,\n        aggregations: aggregateDataset(nextValues)\n    }\n\n    const nextCache = Object.assign({}, state.cache, {[action.filter.stat]: nextValues});\n\n    return {\n        data: results,\n        isLoading: false,\n        cache: nextCache\n    }\n};\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nconst DashboardStore: FunctionComponent<DashboardStoreProps> = ({ children, route }) => {\n\n    // React guarantees the dispatch function identity to remain stable across renderings\n    const [state, dispatch] = useReducer(dashboardReducer, initialState);\n\n    const dataService = useMemo(() => {\n        return new DashboardDataService(dispatch);\n    }, []);\n\n    useEffect(() => {\n       // queue the loading of the default Dashboard on first render\n       dataService.load({stat: route.params.stat ?? DEFAULT_STAT});\n    }, [dataService, route]);\n\n    // expose the ConsumerApi instance via Context to children components\n    // so they can call client.load/client.append methods and rerender on state change\n    const consumerApi: ConsumerApi = {\n        data: state.data,\n        isLoading: state.isLoading,\n        client: dataService\n    };\n\n    return <DashboardContext.Provider value={consumerApi}>\n        {children}\n    </DashboardContext.Provider>;\n};\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nexport default DashboardStore;\nexport { DashboardContext };\n","import React, { FunctionComponent } from 'react';\nimport StatsTile from './stats-tile';\nimport {DashboardContext} from '../stores/dashboard-store';\nimport styles from './stats-summary.module.scss';\n\nconst DISPLAY_STATS = [{\n    id: 'mean',\n    label: 'Mean',\n    unit: 'mg/L'\n}, {\n    id: 'median',\n    label: 'Median',\n    unit: 'mg/L'\n}, {\n    id: 'std',\n    label: 'Standard Deviation',\n    unit: 'mg/L'\n}, {\n    id: 'mode',\n    label: 'Mode',\n    unit: 'mg/L'\n}];\n\nconst StatsSummary: FunctionComponent = () => {\n\n    const {data, isLoading} = React.useContext(DashboardContext);\n\n    const tiles = DISPLAY_STATS.map(\n        (stat, idx) => <StatsTile\n            key={stat.id}\n            title={stat.label}\n            value={data.aggregations[stat.id]}\n            unit={stat.unit}\n            color={idx + 1}\n            loading={isLoading}\n        />\n    );\n\n    return <div className={styles.container}>\n        {tiles}\n    </div>;\n\n}\n\nexport default StatsSummary;\n","import React, { FunctionComponent, useContext, useRef } from 'react';\nimport {DashboardContext} from '../stores/dashboard-store';\nimport styles from './nav-header.module.scss';\nimport {Link} from 'react-router-dom';\nimport cx from 'classnames';\n\nconst DATASETS = [\n    '1234',\n    '4321'\n]\n\nconst NavHeader: FunctionComponent = () => {\n\n    const inputEl = useRef<HTMLInputElement>(null);\n    const {data, client, isLoading} = useContext(DashboardContext);\n\n    const appendValue = () => {\n        if (!client || !inputEl.current) {\n            return;\n        }\n        let nextValue;\n        try {\n            nextValue = parseFloat(inputEl.current.value);\n        } catch {\n            nextValue = NaN\n        }\n        if (Number.isNaN(nextValue)) {\n            return;\n        }\n        inputEl.current.value = '';\n        client.append(nextValue, data.filter);\n    }\n\n    const datasetLinks = DATASETS.map(stat => {\n        const selected = stat === data.filter.stat;\n        const title = `Load ${stat}`;\n        return <Link\n            id={stat}\n            to={`/tile-dashboard-spa/stats/${stat}`}\n            className={cx(styles.navButton, selected && styles.selected)}\n        >{title}</Link>\n    });\n\n    return <header className={styles.container}>\n        <div className={styles.navBar}>\n            {datasetLinks}\n        </div>\n        <div className={cx(styles.dataEntry, isLoading && styles.disabled)}>\n            <input ref={inputEl} type=\"number\"/>\n            <button className={styles.addButton} onClick={appendValue}>Add Value</button>\n        </div>\n    </header>;\n\n}\n\nexport default NavHeader;\n","import React, {FunctionComponent} from 'react';\nimport StatsSummary from '../components/stats-summary';\nimport NavHeader from '../components/nav-header';\nimport DashboardStore from '../stores/dashboard-store';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst Stats: FunctionComponent<RouteComponentProps> = ({match}) => {\n    return <DashboardStore route={match}>\n        <NavHeader/>\n        <StatsSummary/>\n    </DashboardStore>\n}\n\nexport default Stats;\n\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Stats from './routes/stats';\n\n\nconst App = () => {\n    return <Router>\n        <div className=\"viewport\">\n            <Switch>\n                <Route path=\"/tile-dashboard-spa/stats/:stat\" component={Stats}/>\n                <Route path=\"*\" component={Stats} />\n            </Switch>\n        </div>\n    </Router>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './app';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"nav-header_container__3NHt4\",\"navBar\":\"nav-header_navBar__3Rv3M\",\"navButton\":\"nav-header_navButton__2zD4s ui-kit_button__10dfy\",\"selected\":\"nav-header_selected__34kVS\",\"dataEntry\":\"nav-header_dataEntry__2-zN-\",\"disabled\":\"nav-header_disabled__39XCR\",\"addButton\":\"nav-header_addButton__1fsWd ui-kit_button__10dfy\"};"],"sourceRoot":""}